#include <iostream>
using namespace std;

class Stack
{
    int top;
    int arr[5];

public:
    Stack()
    {
        top = -1;
        for (int i = 0; i < 5 ; i++)
        {
            arr[i] = 0;
        }
    }

    bool isEmpty()
    {
        if (top == -1)
         
            return true;
        else
            return false;
    }

    bool isFull()
    {
        if (top == 4)
            return true;
        else
            return false;
    }

    void push(int val)
    {
        if (isFull())
        {
            cout << "Stack Overflow";
        }
        else
        {
            top++;
            arr[top] = val;
        }
    }

    int pop()
    {
        if (isEmpty())
        {
            cout << "Stack Underflow";
            return 0;
        }
        else
        {
            int popvalue = arr[top];
            arr[top] = 0;
            top--;
            return popvalue;
        }
    }

    int count()
    {
        return (top + 1);
    }

    int peek(int pos)
    {
        if (isEmpty())
        {
            cout << "Stack Underflow";
            return 0;
        }
        else
            return arr[pos];
    }

    void change(int pos, int val)
    {
        arr[pos] = val;
        cout << "Value changed at location " << pos << endl;
    }

    void display()
    {
        cout << "Values in Stack are\n";
        for (int i = 4; i >= 0; i--)
        {
            cout << arr[i] << endl;
        }
    }
};

int main()
{
    Stack s1;
    int option, position, value;

    do
    {
        cout << "What operation do you want to perform?\nSelect option number\nEnter 0 to exit" << endl;
        cout << "1. Push()\n";
        cout << "2. Pop()\n";
        cout << "3. isEmpty()\n";
        cout << "4. isFull()\n";
        cout << "5. Peek()\n";
        cout << "6. Count()\n";
        cout << "7. Change()\n";
        cout << "8. Display()\n";

        cin >> option;
        switch (option)
        {
        case 1:
            cout << "Enter value to push ";
            cin >> value;
            s1.push(value);
            break;
        case 2:
            cout << "Pop function called - \n Popped value: " << s1.pop() << endl;
            break;
        case 3:
            if (s1.isEmpty())
            {
                cout << "Stack is Empty.";
            }
            else
            {
                cout << "Stack is not Empty.";  
            }
            break;
        case 4:
            if (s1.isFull())
            {
                cout << "Stack is Full.";
            }
            else
            {
                cout << "Stack is not Full.";
            }
            break;
        case 5:
            cout << "Enter position to peek: ";
            cin >> position;
            cout << "Peek function called-\nValue at position " << position << "is " << s1.peek(position) << endl;
            break;
        case 6:
            cout << "Count function called-\n"
                 << s1.count();
            break;
        case 7:
            cout << "Change function called-\nEnter position to change: ";
            cin >> position;
            cout << "Enter value to change at position" << position << ": ";
            cin >> value;
            s1.change(position, value);
            break;
        case 8:
            cout << "Display function called-\nDiplaying values in Stack" << endl;
            break;

        default:
            cout << "Enter proper option number.";
            break;
        }

    } while (option != 0);
    return 0;
}
